name: Run Tests ðŸ§ª

on:
  push:
    branches: ["**"] # Run tests on any branch push
  pull_request:
    branches: ["**"] # Run tests on any pull request

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Get PR author and last commit author
        id: check
        uses: actions/github-script@v7
        with:
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
            });

            const prAuthor = pr.data.user.login;
            const lastCommitSha = context.payload.pull_request.head.sha;

            const commitData = await github.rest.repos.getCommit({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: lastCommitSha,
            });

            const lastCommitAuthor = commitData.data.author.login;

            console.log("PR Author:", prAuthor);
            console.log("Last Commit Author:", lastCommitAuthor);

            if (prAuthor !== lastCommitAuthor) {
              core.setFailed(`ðŸš« Only the PR author (${prAuthor}) is allowed to push/merge. Last commit was by ${lastCommitAuthor}.`);
            } else {
              core.notice(`âœ… Merge allowed. PR and last commit are by ${prAuthor}`);
            }

      - name: Run unit tests
        run: npm test -- --coverage

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results.xml
